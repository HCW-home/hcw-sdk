import { HttpBackend } from '@angular/common/http';
import { Observable } from 'rxjs';
import { LogPosition } from './types/log-position';
import * as ɵngcc0 from '@angular/core';
export declare class NGXMapperService {
    private httpBackend;
    private sourceMapCache;
    private logPositionCache;
    constructor(httpBackend: HttpBackend);
    private static getStackLine;
    private static getPosition;
    private static getTranspileLocation;
    private static getMapFilePath;
    private static getMapping;
    /**
     * does the http get request to get the source map
     * @param sourceMapLocation
     * @param distPosition
     */
    private _getSourceMap;
    /**
     * Returns the LogPosition for the current log
     * If sourceMaps are enabled, it attemps to get the source map from the server, and use that to parse the file name
     * and number of the call
     * @param sourceMapsEnabled
     */
    getCallerDetails(sourceMapsEnabled: boolean): Observable<LogPosition>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NGXMapperService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NGXMapperService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwcGVyLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsibWFwcGVyLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwQmFja2VuZCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IExvZ1Bvc2l0aW9uIH0gZnJvbSAnLi90eXBlcy9sb2ctcG9zaXRpb24nO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTkdYTWFwcGVyU2VydmljZSB7XG4gICAgcHJpdmF0ZSBodHRwQmFja2VuZDtcbiAgICBwcml2YXRlIHNvdXJjZU1hcENhY2hlO1xuICAgIHByaXZhdGUgbG9nUG9zaXRpb25DYWNoZTtcbiAgICBjb25zdHJ1Y3RvcihodHRwQmFja2VuZDogSHR0cEJhY2tlbmQpO1xuICAgIHByaXZhdGUgc3RhdGljIGdldFN0YWNrTGluZTtcbiAgICBwcml2YXRlIHN0YXRpYyBnZXRQb3NpdGlvbjtcbiAgICBwcml2YXRlIHN0YXRpYyBnZXRUcmFuc3BpbGVMb2NhdGlvbjtcbiAgICBwcml2YXRlIHN0YXRpYyBnZXRNYXBGaWxlUGF0aDtcbiAgICBwcml2YXRlIHN0YXRpYyBnZXRNYXBwaW5nO1xuICAgIC8qKlxuICAgICAqIGRvZXMgdGhlIGh0dHAgZ2V0IHJlcXVlc3QgdG8gZ2V0IHRoZSBzb3VyY2UgbWFwXG4gICAgICogQHBhcmFtIHNvdXJjZU1hcExvY2F0aW9uXG4gICAgICogQHBhcmFtIGRpc3RQb3NpdGlvblxuICAgICAqL1xuICAgIHByaXZhdGUgX2dldFNvdXJjZU1hcDtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBMb2dQb3NpdGlvbiBmb3IgdGhlIGN1cnJlbnQgbG9nXG4gICAgICogSWYgc291cmNlTWFwcyBhcmUgZW5hYmxlZCwgaXQgYXR0ZW1wcyB0byBnZXQgdGhlIHNvdXJjZSBtYXAgZnJvbSB0aGUgc2VydmVyLCBhbmQgdXNlIHRoYXQgdG8gcGFyc2UgdGhlIGZpbGUgbmFtZVxuICAgICAqIGFuZCBudW1iZXIgb2YgdGhlIGNhbGxcbiAgICAgKiBAcGFyYW0gc291cmNlTWFwc0VuYWJsZWRcbiAgICAgKi9cbiAgICBnZXRDYWxsZXJEZXRhaWxzKHNvdXJjZU1hcHNFbmFibGVkOiBib29sZWFuKTogT2JzZXJ2YWJsZTxMb2dQb3NpdGlvbj47XG59XG4iXX0=