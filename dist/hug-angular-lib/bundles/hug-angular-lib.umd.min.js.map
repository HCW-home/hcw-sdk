{"version":3,"sources":["../node_modules/tslib/tslib.es6.js","ng://hug-angular-lib/lib/hug-angular-lib.component.ts","ng://hug-angular-lib/lib/hug-angular-lib.module.ts","ng://hug-angular-lib/lib/stream.ts","ng://hug-angular-lib/lib/signaling.service.ts","ng://hug-angular-lib/lib/peer.ts","ng://hug-angular-lib/lib/remote-peers.service.ts","ng://hug-angular-lib/lib/room.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__assign","assign","t","s","i","n","arguments","length","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","create","__values","o","m","__read","r","ar","error","__spread","concat","HugAngularLibComponent","ngOnInit","selectors","decls","vars","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","console","log","HugAngularLibModule","providers","LogService","imports","LoggerModule","forRoot","level","NgxLoggerLevel","DEBUG","declarations","ngxLogger","exports","Stream","onLayerChange","Subject","mediaStream","MediaStream","setConsumer","consumer","streamId","id","kind","addTrack","track","consumerLayerChanged","setProducer","producer","SocketTimeoutError","_super","message","_this","name","Error","captureStackTrace","stack","String","__","constructor","__extends","SignalingService","logger","_signalingBaseUrl","_closed","onDisconnected","onReconnecting","onReconnected","onNewConsumer","onNotification","init","roomId","peerId","_signalingUrl","_signalingSocket","io","debug","on","reason","warn","close","attemptNumber","request","cb","method","data","notification","timeoutCallback","callback","called","interval","setTimeout","args","_i","clearTimeout","_sendRequest","emit","err","response","sendRequest","requestRetries","tries","_a","error_1","core","ɵɵinject","NGXLogger","factory","ɵfac","providedIn","Peer","streams","RemotePeersService","_remotePeers","BehaviorSubject","peers","remotePeers","asObservable","updatePeers","clearPeers","newPeer","peer","addPeer","closePeer","filter","addPeers","this_1","find","peers_1","peers_1_1","newConsumer","type","producerPaused","existingStream","stream","appData","source","onConsumerLayerChanged","consumerId","getStreamByConsumerId","_b","_c","simulcastEncodings","scaleResolutionDownBy","VIDEO_CONSTRAINS","low","width","ideal","aspectRatio","medium","high","veryhigh","ultra","PC_PROPRIETARY_CONSTRAINTS","optional","googDscp","VIDEO_SIMULCAST_ENCODINGS","maxBitRate","VIDEO_KSVC_ENCODINGS","scalabilityMode","RoomService","signalingService","remotePeersService","_sendTransport","_recvTransport","_produce","_forceTcp","onCamProducing","_d","produce","_e","forceTcp","_f","muted","_muted","_device","deviceInfo","_peerId","_roomId","_mediasoupDevice","_micProducer","_hark","_harkStream","_webcamProducer","_extraVideoProducers","Map","_webcams","_audioDevices","_audioOutputDevices","_consumers","_useSimulcast","_startDevicesListener","navigator","mediaDevices","addEventListener","_updateAudioDevices","_updateWebcams","_updateAudioOutputDevices","muteMic","pause","producerId","unmuteMic","updateMic","start","resume","error_2","changeAudioOutputDevice","deviceId","error_3","restart","flag","newDeviceId","canProduce","_getAudioDeviceId","_v","autoGainControl","echoCancellation","noiseSuppression","sampleRate","_g","channelCount","_h","volume","_j","sampleSize","_k","opusStereo","_l","opusDtx","_m","opusFec","_o","opusPtime","_p","opusMaxPlaybackRate","_q","disableMic","getUserMedia","audio","_u","getAudioTracks","getSettings","_r","codecOptions","applyConstraints","_s","harkTrack","error_4","stop","updateWebcam","newResolution","newFrameRate","_getWebcamDeviceId","resolution","frameRate","disableWebcam","video","getVideoTracks","firstVideoCodec","rtpCapabilities","codecs","c","encodings","mimeType","toLowerCase","videoGoogleStartBitrate","webCamStream","values","error_5","closeMeeting","error_6","modifyPeerConsumer","mute","_pauseConsumer","_resumeConsumer","error_7","paused","closed","error_8","error_9","join","joinVideo","joinAudio","subscribe","pipe","switchMap","rtpParameters","consume","set","delete","score","displayName","picture","roles","get","hark","spatialLayer","temporalLayer","_joinRoom","turnServers","_turnServers","error_10","enumerateDevices","devices","devices_1","devices_1_1","device","error_11","devices_2","devices_2_1","error_12","error_13","error_14","webcams","error_15","audioDevices","error_16","devices_3","devices_3_1","error_17","Math","floor","random","mediasoupClient.Device","routerRtpCapabilities","headerExtensions","ext","uri","load","producing","consuming","transportInfo_1","id_1","iceParameters_1","iceParameters","iceCandidates_1","iceCandidates","dtlsParameters_1","dtlsParameters","createSendTransport","iceServers","iceTransportPolicy","undefined","proprietaryConstraints","errback","transportId","catch","id_2","error_19","transportInfo","createRecvTransport","authenticated","tracker","roomPermissions","userRoles","allowWhenRoleMissing","chatHistory","fileHistory","lastNHistory","locked","lobbyPeers","accessCode","error_18","ua","userAgent","browser","bowser","getParser","satisfies","chrome","chromium","firefox","safari","opera","microsoft edge","os","getOSName","platform","getPlatformType","getBrowserName","version","getBrowserVersion"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-hug-angular-lib',\n  template: `\n    <p>\n      hug-fuck shit address\n    </p>\n  `,\n  styles: []\n})\nexport class HugAngularLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","import { LogService } from './log.service';\nimport { NgModule } from '@angular/core';\nimport { HugAngularLibComponent } from './hug-angular-lib.component';\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\n\nconsole.log('NGX logger')\n@NgModule({\n  declarations: [HugAngularLibComponent],\n  imports: [\n    LoggerModule.forRoot({ level: NgxLoggerLevel.DEBUG})\n  ],\n  providers:[LogService],\n  exports: [HugAngularLibComponent]\n})\nexport class HugAngularLibModule { }\n","import { Subject } from 'rxjs';\n\n\nimport * as mediasoup from 'mediasoup-client';\n\nimport { Peer } from './peer';\n\n\nexport class Stream {\n\n  public consumer?: mediasoup.types.Consumer;\n  public peer?: Peer;\n  public producer?\n  public streamId: string;\n\n  public onLayerChange: Subject<any> = new Subject()\n\n  public type;\n  public producerPaused: boolean\n\n  public kind;\n\n  mediaStream: MediaStream = new MediaStream();\n\n  setConsumer(consumer: mediasoup.types.Consumer) {\n    this.consumer = consumer;\n    this.streamId = consumer.id\n    this.kind = consumer.kind;\n    this.mediaStream.addTrack(consumer.track);\n  }\n\n  consumerLayerChanged() {\n    this.mediaStream = new MediaStream();\n    this.mediaStream.addTrack(this.consumer.track);\n    this.onLayerChange.next()\n  }\n\n\n  setProducer(producer) {\n    this.producer = producer\n    this.mediaStream.addTrack(producer.track);\n  }\n}\n","import { LogService } from './log.service';\nimport { Injectable } from '@angular/core';\n\n\nimport { io, Socket } from 'socket.io-client';\nimport { Subject } from 'rxjs';\n\n\nconst requestTimeout = 20000\n\n/**\n * Error produced when a socket request has a timeout.\n */\nexport class SocketTimeoutError extends Error\n{\n\tconstructor(message)\n\t{\n\t\tsuper(message);\n\n\t\tthis.name = 'SocketTimeoutError';\n\n    if (Error.hasOwnProperty('captureStackTrace')) // Just in V8.\n      // @ts-ignore\n\t\t\tError.captureStackTrace(this, SocketTimeoutError);\n\t\telse\n\t\t\tthis.stack = (new Error(message)).stack;\n\t}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalingService  {\n\n  peerId: string;\n  roomId: string;\n  _signalingSocket: Socket;\n  _signalingBaseUrl = 'wss://conferences.iabsis.com';\n  _signalingUrl: string;\n  _closed = false;\n\n  onDisconnected: Subject<any> = new Subject()\n  onReconnecting: Subject<any> = new Subject()\n  onReconnected: Subject<any> = new Subject()\n  onNewConsumer: Subject<any> = new Subject();\n  onNotification: Subject<any> = new Subject();\n  constructor(private logger: LogService ) {\n\n   }\n\n\n  init(roomId, peerId) {\n\n    this._signalingUrl =\n    `${this._signalingBaseUrl}/?roomId=${roomId}&peerId=${peerId}`;\n    this._signalingSocket = io(this._signalingUrl)\n    this.logger.debug(\"Initialize socket \", this._signalingUrl)\n\n\n\t\tthis._signalingSocket.on('connect', () =>\n\t\t{\n\t\t \tthis.logger.debug('signaling Peer \"connect\" event');\n    });\n\n    this._signalingSocket.on('disconnect', (reason) =>\n\t\t{\n\t\t\tthis.logger.warn('signaling Peer \"disconnect\" event [reason:\"%s\"]', reason);\n\n\t\t\tif (this._closed)\n\t\t\t\treturn;\n\n\t\t\tif (reason === 'io server disconnect')\n\t\t\t{\n        this.onDisconnected.next()\n\n\t\t\t\tthis.close();\n\t\t\t}\n\n      this.onReconnecting.next\n\n\t\t});\n\n    this._signalingSocket.on('reconnect_failed', () =>\n\t\t{\n\t\t\tthis.logger.warn('signaling Peer \"reconnect_failed\" event');\n\n      this.onDisconnected.next()\n\n\t\t\tthis.close();\n    });\n\n\n\t\tthis._signalingSocket.on('reconnect', (attemptNumber) =>\n\t\t{\n\t\t\tthis.logger.debug('signaling Peer \"reconnect\" event [attempts:\"%s\"]', attemptNumber);\n\n      this.onReconnected.next(attemptNumber)\n\n\n\t\t\t// store.dispatch(roomActions.setRoomState('connected'));\n\t\t});\n\n\n\n\t\tthis._signalingSocket.on('request', async (request, cb) =>\n\t\t{\n\t\t\tthis.logger.debug(\n\t\t\t\t'socket \"request\" event [method:\"%s\", data:\"%o\"]',\n\t\t\t\trequest.method, request.data);\n\n\n\t\t\tswitch (request.method)\n\t\t\t{\n\t\t\t\tcase 'newConsumer':\n\t\t\t\t{\n            this.onNewConsumer.next(request.data);\n            cb()\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\tthis.logger.error('unknown request.method \"%s\"', request.method);\n\n\t\t\t\t\tcb(500, `unknown request.method \"${request.method}\"`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n    this._signalingSocket.on('notification', (notification) => {\n      this.logger.debug(\n        'socket \"notification\" event [method:\"%s\", data:\"%o\"]',\n        notification.method, notification.data);\n\n      this.onNotification.next(notification)\n\n    });\n\n\n\n  }\n  close() {\n    if (this._closed)\n      return;\n\n    this._closed = true;\n\n    this.logger.debug('close()');\n\n    this._signalingSocket.close();\n\n\n  }\n\ttimeoutCallback(callback)\n\t{\n\t\tlet called = false;\n\n\t\tconst interval = setTimeout(\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tif (called)\n\t\t\t\t\treturn;\n\t\t\t\tcalled = true;\n\t\t\t\tcallback(new SocketTimeoutError('Request timed out'));\n\t\t\t},\n\t\t\trequestTimeout\n\t\t);\n\n\t\treturn (...args) =>\n\t\t{\n\t\t\tif (called)\n\t\t\t\treturn;\n\t\t\tcalled = true;\n\t\t\tclearTimeout(interval);\n\n\t\t\tcallback(...args);\n\t\t};\n\t}\n\n\t_sendRequest(method, data)\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tif (!this._signalingSocket)\n\t\t\t{\n\t\t\t\treject('No socket connection');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis._signalingSocket.emit(\n\t\t\t\t\t'request',\n\t\t\t\t\t{ method, data },\n\t\t\t\t\tthis.timeoutCallback((err, response) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (err)\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t});\n  }\n\n\n\tpublic async sendRequest(method, data?):Promise<any>\n\t{\n\t\tthis.logger.debug('sendRequest() [method:\"%s\", data:\"%o\"]', method, data);\n\n\t\tconst requestRetries = 3\n\n\n\t\tfor (let tries = 0; tries < requestRetries; tries++)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\treturn await this._sendRequest(method, data);\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tif (\n\t\t\t\t\terror instanceof SocketTimeoutError &&\n\t\t\t\t\ttries < requestRetries\n\t\t\t\t)\n\t\t\t\t\tthis.logger.warn('sendRequest() | timeout, retrying [attempt:\"%s\"]', tries);\n\t\t\t\telse\n\t\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { Stream } from './stream';\nexport class Peer {\n  id: string\n  streams: Stream[]=[]\n}\n","import { Stream } from './stream';\nimport { LogService } from './log.service';\nimport { Peer } from './peer';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as mediasoup from 'mediasoup-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RemotePeersService {\n\n\tpublic remotePeers: Observable<Peer[]>;\n\tprivate _remotePeers: BehaviorSubject<Peer[]> = new BehaviorSubject([]);\n\n  private peers: Peer[] = []\n  constructor(private logger: LogService) {\n    this.remotePeers = this._remotePeers.asObservable()\n   }\n\n\n  updatePeers() {\n    setTimeout(() => \tthis._remotePeers.next(this.peers)    ,0)\n  }\n\n  clearPeers(){\n    this._remotePeers = <BehaviorSubject<Peer[]>>new BehaviorSubject([]);\n    this.remotePeers = this._remotePeers.asObservable();\n    this.peers = []\n  }\n  newPeer(id): Peer {\n    this.logger.debug('New peer', id)\n    const peer = new Peer()\n    peer.id = id;\n    peer.streams = []\n    this.addPeer(peer)\n    this.updatePeers()\n    return peer\n  }\n  closePeer(id){\n\t\tthis.logger.debug(\n\t\t\t'room \"peerClosed\" event [peerId:%o]', id);\n\n    this.peers = this.peers.filter((peer) => peer.id !== id);\n    this.updatePeers()\n  }\n\n\n  addPeer(peer: Peer) {\n    this.peers.push(peer)\n  }\n\n  addPeers(peers){\n    this.logger.debug('Add peers ', peers)\n\t\tfor (const peer of peers)\n\t\t{\n\t\t\tif (!this.peers.find(p=>peer.id === p.id))\n\t\t\t{\n\t\t\t\tthis.logger.debug('adding peer [peerId: \"%s\"]', peer.id);\n        this.peers.push({ id: peer.id, streams:[] });\n\t\t\t}\n\t\t}\n\t\tthis.updatePeers();\n  }\n\n  newConsumer(consumer: mediasoup.types.Consumer, peerId: string, type, producerPaused) {\n\n    this.logger.debug('remote peers New consumer', consumer, peerId)\n    let peer = this.peers.find(peer => peer.id === peerId)\n\n    if (!peer) {\n      this.logger.warn('Couldn\\'t find peer', peerId, this.peers)\n      peer = this.newPeer(peerId)\n    }\n    const existingStream = peer.streams.find(stream => stream.consumer?.appData.source === consumer.appData.source)\n\n    if (existingStream) {\n      existingStream.setConsumer(consumer)\n    } else {\n      const stream = new Stream()\n      stream.peer = peer\n      stream.type = type;\n      stream.producerPaused = producerPaused;\n      stream.setConsumer(consumer)\n      this.logger.debug('New stream created ', stream)\n      peer.streams.push(stream)\n    }\n\n    this.updatePeers()\n\n  }\n\n  onConsumerLayerChanged(consumerId) {\n\n\n\n      const stream = this.getStreamByConsumerId( consumerId)\n      if (stream) {\n\n        stream.consumerLayerChanged()\n      }\n\n  }\n\n\n  getStreamByConsumerId(consumerId: string): Stream {\n    for (const peer of this.peers) {\n      const stream = peer.streams.find(s => s.consumer.id === consumerId)\n      if (stream) {\n        return stream\n      }\n    }\n    return null\n  }\n}\n","import { Stream } from './stream';\nimport { RemotePeersService } from './remote-peers.service';\nimport { LogService } from './log.service';\nimport { SignalingService } from './signaling.service';\n\nimport { Injectable } from '@angular/core';\n\nimport { switchMap } from 'rxjs/operators';\nimport bowser from 'bowser';\n\nimport * as mediasoupClient from 'mediasoup-client'\nimport { Subject } from 'rxjs';\n\n\nlet saveAs;\n\n\nconst lastN = 4\nconst mobileLastN = 1\nconst videoAspectRatio = 1.777\n\nconst simulcast = true;\nconst \tsimulcastEncodings   = [\n  { scaleResolutionDownBy: 4 },\n  { scaleResolutionDownBy: 2 },\n  { scaleResolutionDownBy: 1 }\n]\n\n\nconst VIDEO_CONSTRAINS =\n{\n\t'low' :\n\t{\n\t\twidth       : { ideal: 320 },\n\t\taspectRatio : videoAspectRatio\n\t},\n\t'medium' :\n\t{\n\t\twidth       : { ideal: 640 },\n\t\taspectRatio : videoAspectRatio\n\t},\n\t'high' :\n\t{\n\t\twidth       : { ideal: 1280 },\n\t\taspectRatio : videoAspectRatio\n\t},\n\t'veryhigh' :\n\t{\n\t\twidth       : { ideal: 1920 },\n\t\taspectRatio : videoAspectRatio\n\t},\n\t'ultra' :\n\t{\n\t\twidth       : { ideal: 3840 },\n\t\taspectRatio : videoAspectRatio\n\t}\n};\n\nconst PC_PROPRIETARY_CONSTRAINTS =\n{\n\toptional : [ { googDscp: true } ]\n};\n\nconst VIDEO_SIMULCAST_ENCODINGS =\n[\n\t{ scaleResolutionDownBy: 4, maxBitRate: 100000 },\n\t{ scaleResolutionDownBy: 1, maxBitRate: 1200000 }\n];\n\n// Used for VP9 webcam video.\nconst VIDEO_KSVC_ENCODINGS =\n[\n\t{ scalabilityMode: 'S3T3_KEY' }\n];\n\n// Used for VP9 desktop sharing.\nconst VIDEO_SVC_ENCODINGS =\n[\n\t{ scalabilityMode: 'S3T3', dtx: true }\n];\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport  class RoomService {\n\n\n\n  // Transport for sending.\n  _sendTransport = null;\n  // Transport for receiving.\n  _recvTransport = null;\n\n  _closed = false;\n\n  _produce = true;\n\n  _forceTcp = false;\n\n  _muted\n  _device\n  _peerId\n  _soundAlert\n  _roomId\n  _mediasoupDevice\n\n  _micProducer\n  _hark\n  _harkStream\n  _webcamProducer\n  _extraVideoProducers\n  _webcams\n  _audioDevices\n  _audioOutputDevices\n  _consumers\n  _useSimulcast\n  _turnServers\n\n  public onCamProducing: Subject<any> = new Subject();\n  constructor(\n    private signalingService: SignalingService,\n    private logger: LogService,\n  private remotePeersService: RemotePeersService) {\n\n\n  }\n\n  init({\n    peerId=null,\n\n    produce=true,\n    forceTcp=false,\n    muted=false\n  } = {}) {\n    if (!peerId)\n      throw new Error('Missing peerId');\n\n\n    // logger.debug(\n    //   'constructor() [peerId: \"%s\", device: \"%s\", produce: \"%s\", forceTcp: \"%s\", displayName \"\"]',\n    //   peerId, device.flag, produce, forceTcp);\n\n\n\n\n    // Whether we should produce.\n    this._produce = produce;\n\n    // Whether we force TCP\n    this._forceTcp = forceTcp;\n\n\n\n\n    // Whether simulcast should be used.\n    // this._useSimulcast = false;\n\n    // if ('simulcast' in window.config)\n    //   this._useSimulcast = window.config.simulcast;\n\n\n\n\n\n    this._muted = muted;\n\n    // This device\n    this._device = this.deviceInfo();\n\n    // My peer name.\n    this._peerId = peerId;\n\n\n\n    // Alert sound\n    // this._soundAlert = new Audio('/sounds/notify.mp3');\n\n\n\n\n    // The room ID\n    this._roomId = null;\n\n    // mediasoup-client Device instance.\n    // @type {mediasoupClient.Device}\n    this._mediasoupDevice = null;\n\n\n    // Transport for sending.\n    this._sendTransport = null;\n\n    // Transport for receiving.\n    this._recvTransport = null;\n\n    // Local mic mediasoup Producer.\n    this._micProducer = null;\n\n    // Local mic hark\n    this._hark = null;\n\n    // Local MediaStream for hark\n    this._harkStream = null;\n\n    // Local webcam mediasoup Producer.\n    this._webcamProducer = null;\n\n    // Extra videos being produced\n    this._extraVideoProducers = new Map();\n\n    // Map of webcam MediaDeviceInfos indexed by deviceId.\n    // @type {Map<String, MediaDeviceInfos>}\n    this._webcams = {};\n\n    this._audioDevices = {};\n\n    this._audioOutputDevices = {};\n\n    // mediasoup Consumers.\n    // @type {Map<String, mediasoupClient.Consumer>}\n    this._consumers = new Map();\n\n    this._useSimulcast = simulcast\n\n    // this._startKeyListener();\n\n    // this._startDevicesListener();\n\n  }\n  close() {\n    if (this._closed)\n      return;\n\n    this._closed = true;\n\n    this.logger.debug('close()');\n\n    this.signalingService.close();\n\n    // Close mediasoup Transports.\n    if (this._sendTransport)\n      this._sendTransport.close();\n\n    if (this._recvTransport)\n      this._recvTransport.close();\n\n\n  }\n\n  // _startKeyListener() {\n  //   // Add keydown event listener on document\n  //   document.addEventListener('keydown', (event) => {\n  //     if (event.repeat) return;\n  //     const key = String.fromCharCode(event.which);\n\n  //     const source = event.target;\n\n  //     const exclude = ['input', 'textarea'];\n\n  //     if (exclude.indexOf(source.tagName.toLowerCase()) === -1) {\n  //       logger.debug('keyDown() [key:\"%s\"]', key);\n\n  //       switch (key) {\n\n  //         /*\n  //         case String.fromCharCode(37):\n  //         {\n  //           const newPeerId = this._spotlights.getPrevAsSelected(\n  //             store.getState().room.selectedPeerId);\n\n  //           if (newPeerId) this.setSelectedPeer(newPeerId);\n  //           break;\n  //         }\n\n  //         case String.fromCharCode(39):\n  //         {\n  //           const newPeerId = this._spotlights.getNextAsSelected(\n  //             store.getState().room.selectedPeerId);\n\n  //           if (newPeerId) this.setSelectedPeer(newPeerId);\n  //           break;\n  //         }\n  //         */\n\n\n  //         case 'M': // Toggle microphone\n  //           {\n  //             if (this._micProducer) {\n  //               if (!this._micProducer.paused) {\n  //                 this.muteMic();\n\n  //                 store.dispatch(requestActions.notify(\n  //                   {\n  //                     text: intl.formatMessage({\n  //                       id: 'devices.microphoneMute',\n  //                       defaultMessage: 'Muted your microphone'\n  //                     })\n  //                   }));\n  //               }\n  //               else {\n  //                 this.unmuteMic();\n\n  //                 store.dispatch(requestActions.notify(\n  //                   {\n  //                     text: intl.formatMessage({\n  //                       id: 'devices.microphoneUnMute',\n  //                       defaultMessage: 'Unmuted your microphone'\n  //                     })\n  //                   }));\n  //               }\n  //             }\n  //             else {\n  //               this.updateMic({ start: true });\n\n  //               store.dispatch(requestActions.notify(\n  //                 {\n  //                   text: intl.formatMessage({\n  //                     id: 'devices.microphoneEnable',\n  //                     defaultMessage: 'Enabled your microphone'\n  //                   })\n  //                 }));\n  //             }\n\n  //             break;\n  //           }\n\n  //         case 'V': // Toggle video\n  //           {\n  //             if (this._webcamProducer)\n  //               this.disableWebcam();\n  //             else\n  //               this.updateWebcam({ start: true });\n\n  //             break;\n  //           }\n\n  //         case 'H': // Open help dialog\n  //           {\n  //             store.dispatch(roomActions.setHelpOpen(true));\n\n  //             break;\n  //           }\n\n  //         default:\n  //           {\n  //             break;\n  //           }\n  //       }\n  //     }\n  //   });\n\n\n  // }\n\n  _startDevicesListener() {\n    navigator.mediaDevices.addEventListener('devicechange', async () => {\n      this.logger.debug('_startDevicesListener() | navigator.mediaDevices.ondevicechange');\n\n      await this._updateAudioDevices();\n      await this._updateWebcams();\n      await this._updateAudioOutputDevices();\n\n      // store.dispatch(requestActions.notify(\n      //   {\n      //     text: intl.formatMessage({\n      //       id: 'devices.devicesChanged',\n      //       defaultMessage: 'Your devices changed, configure your devices in the settings dialog'\n      //     })\n      //   }));\n    });\n  }\n\n\n\n  async muteMic() {\n    this.logger.debug('muteMic()');\n\n    this._micProducer.pause();\n\n    try {\n      await this.signalingService.sendRequest(\n        'pauseProducer', { producerId: this._micProducer.id });\n\n      // store.dispatch(\n      //   producerActions.setProducerPaused(this._micProducer.id));\n\n      // store.dispatch(\n      //   settingsActions.setAudioMuted(true));\n\n    }\n    catch (error) {\n      this.logger.error('muteMic() [error:\"%o\"]', error);\n\n      // store.dispatch(requestActions.notify(\n      //   {\n      //     type: 'error',\n      //     text: intl.formatMessage({\n      //       id: 'devices.microphoneMuteError',\n      //       defaultMessage: 'Unable to mute your microphone'\n      //     })\n      //   }));\n    }\n  }\n\n  async unmuteMic() {\n    this.logger.debug('unmuteMic()');\n\n    if (!this._micProducer) {\n      this.updateMic({ start: true });\n    }\n    else {\n      this._micProducer.resume();\n\n      try {\n        await this.signalingService.sendRequest(\n          'resumeProducer', { producerId: this._micProducer.id });\n\n        // store.dispatch(\n        //   producerActions.setProducerResumed(this._micProducer.id));\n\n        // store.dispatch(\n        //   settingsActions.setAudioMuted(false));\n\n      }\n      catch (error) {\n        this.logger.error('unmuteMic() [error:\"%o\"]', error);\n\n        // store.dispatch(requestActions.notify(\n        //   {\n        //     type: 'error',\n        //     text: intl.formatMessage({\n        //       id: 'devices.microphoneUnMuteError',\n        //       defaultMessage: 'Unable to unmute your microphone'\n        //     })\n        //   }));\n      }\n    }\n  }\n\n\n  async changeAudioOutputDevice(deviceId) {\n    this.logger.debug('changeAudioOutputDevice() [deviceId:\"%s\"]', deviceId);\n\n    // store.dispatch(\n    //   meActions.setAudioOutputInProgress(true));\n\n    try {\n      const device = this._audioOutputDevices[deviceId];\n\n      if (!device)\n        throw new Error('Selected audio output device no longer available');\n\n      // store.dispatch(settingsActions.setSelectedAudioOutputDevice(deviceId));\n\n      await this._updateAudioOutputDevices();\n    }\n    catch (error) {\n      this.logger.error('changeAudioOutputDevice() [error:\"%o\"]', error);\n    }\n\n    // store.dispatch(\n    //   meActions.setAudioOutputInProgress(false));\n  }\n\n  // Only Firefox supports applyConstraints to audio tracks\n  // See:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=796964\n  async updateMic({\n    start = false,\n    restart = false || this._device.flag !== 'firefox',\n    newDeviceId = null\n  } = {}) {\n    this.logger.debug(\n      'updateMic() [start:\"%s\", restart:\"%s\", newDeviceId:\"%s\"]',\n      start,\n      restart,\n      newDeviceId\n    );\n\n    let track;\n\n    try {\n      if (!this._mediasoupDevice.canProduce('audio'))\n        throw new Error('cannot produce audio');\n\n      if (newDeviceId && !restart)\n        throw new Error('changing device requires restart');\n\n      // if (newDeviceId)\n      //   store.dispatch(settingsActions.setSelectedAudioDevice(newDeviceId));\n\n      // store.dispatch(meActions.setAudioInProgress(true));\n\n      const deviceId = await this._getAudioDeviceId();\n      const device = this._audioDevices[deviceId];\n\n      if (!device)\n        throw new Error('no audio devices');\n\n      const autoGainControl = false;\n      const echoCancellation = true\n      const noiseSuppression = true\n\n      // if (!window.config.centralAudioOptions) {\n      //   throw new Error(\n      //     'Missing centralAudioOptions from app config! (See it in example config.)'\n      //   );\n      // }\n\n      const {\n        sampleRate = 96000,\n        channelCount = 1,\n        volume = 1.0,\n        sampleSize = 16,\n        opusStereo = false,\n        opusDtx = true,\n        opusFec = true,\n        opusPtime = 20,\n        opusMaxPlaybackRate = 96000\n      } = {};\n\n      if (\n        (restart && this._micProducer) ||\n        start\n      ) {\n        // this.disconnectLocalHark();\n\n        if (this._micProducer)\n          await this.disableMic();\n\n        const stream = await navigator.mediaDevices.getUserMedia(\n          {\n            audio: {\n              deviceId: { ideal: deviceId },\n              sampleRate,\n              channelCount,\n              // @ts-ignore\n              volume,\n              autoGainControl,\n              echoCancellation,\n              noiseSuppression,\n              sampleSize\n            }\n          }\n        );\n\n        ([track] = stream.getAudioTracks());\n\n        const { deviceId: trackDeviceId } = track.getSettings();\n\n        // store.dispatch(settingsActions.setSelectedAudioDevice(trackDeviceId));\n\n        this._micProducer = await this._sendTransport.produce(\n          {\n            track,\n            codecOptions:\n            {\n              opusStereo,\n              opusDtx,\n              opusFec,\n              opusPtime,\n              opusMaxPlaybackRate\n            },\n            appData:\n              { source: 'mic' }\n          });\n\n        // store.dispatch(producerActions.addProducer(\n        //   {\n        //     id: this._micProducer.id,\n        //     source: 'mic',\n        //     paused: this._micProducer.paused,\n        //     track: this._micProducer.track,\n        //     rtpParameters: this._micProducer.rtpParameters,\n        //     codec: this._micProducer.rtpParameters.codecs[0].mimeType.split('/')[1]\n        //   }));\n\n        this._micProducer.on('transportclose', () => {\n          this._micProducer = null;\n        });\n\n        this._micProducer.on('trackended', () => {\n          // store.dispatch(requestActions.notify(\n          //   {\n          //     type: 'error',\n          //     text: intl.formatMessage({\n          //       id: 'devices.microphoneDisconnected',\n          //       defaultMessage: 'Microphone disconnected'\n          //     })\n          //   }));\n\n          this.disableMic();\n        });\n\n        this._micProducer.volume = 0;\n\n        // this.connectLocalHark(track);\n      }\n      else if (this._micProducer) {\n        ({ track } = this._micProducer);\n\n        await track.applyConstraints(\n          {\n            sampleRate,\n            channelCount,\n            volume,\n            autoGainControl,\n            echoCancellation,\n            noiseSuppression,\n            sampleSize\n          }\n        );\n\n        if (this._harkStream != null) {\n          const [harkTrack] = this._harkStream.getAudioTracks();\n\n          harkTrack && await harkTrack.applyConstraints(\n            {\n              sampleRate,\n              channelCount,\n              volume,\n              autoGainControl,\n              echoCancellation,\n              noiseSuppression,\n              sampleSize\n            }\n          );\n        }\n      }\n\n      await this._updateAudioDevices();\n    }\n    catch (error) {\n      this.logger.error('updateMic() [error:\"%o\"]', error);\n\n      // store.dispatch(requestActions.notify(\n      //   {\n      //     type: 'error',\n      //     text: intl.formatMessage({\n      //       id: 'devices.microphoneError',\n      //       defaultMessage: 'An error occurred while accessing your microphone'\n      //     })\n      //   }));\n\n      if (track)\n        track.stop();\n    }\n\n    // store.dispatch(meActions.setAudioInProgress(false));\n  }\n\n  async updateWebcam({\n    init = false,\n    start = false,\n    restart = false,\n    newDeviceId = null,\n    newResolution = null,\n    newFrameRate = null\n  } = {}) {\n    this.logger.debug(\n      'updateWebcam() [start:\"%s\", restart:\"%s\", newDeviceId:\"%s\", newResolution:\"%s\", newFrameRate:\"%s\"]',\n      start,\n      restart,\n      newDeviceId,\n      newResolution,\n      newFrameRate\n    );\n\n    let track;\n\n    try {\n      if (!this._mediasoupDevice.canProduce('video'))\n        throw new Error('cannot produce video');\n\n      if (newDeviceId && !restart)\n        throw new Error('changing device requires restart');\n\n      // if (newDeviceId)\n      //   store.dispatch(settingsActions.setSelectedWebcamDevice(newDeviceId));\n\n      // if (newResolution)\n      //   store.dispatch(settingsActions.setVideoResolution(newResolution));\n\n      // if (newFrameRate)\n      //   store.dispatch(settingsActions.setVideoFrameRate(newFrameRate));\n\n      const  videoMuted  = false\n\n      if (init && videoMuted)\n        return;\n      // else\n        // store.dispatch(settingsActions.setVideoMuted(false));\n\n      // store.dispatch(meActions.setWebcamInProgress(true));\n\n      const deviceId = await this._getWebcamDeviceId();\n      const device = this._webcams[deviceId];\n\n      if (!device)\n        throw new Error('no webcam devices');\n\n      const  resolution = 'medium'\n      const frameRate = 15\n\n\n\n      if (\n        (restart && this._webcamProducer) ||\n        start\n      ) {\n        if (this._webcamProducer)\n          await this.disableWebcam();\n\n        const stream = await navigator.mediaDevices.getUserMedia(\n          {\n            video:\n            {\n              deviceId: { ideal: deviceId },\n              ...VIDEO_CONSTRAINS[resolution],\n              frameRate\n            }\n          });\n\n        ([track] = stream.getVideoTracks());\n\n        const { deviceId: trackDeviceId } = track.getSettings();\n\n        // store.dispatch(settingsActions.setSelectedWebcamDevice(trackDeviceId));\n\n        if (this._useSimulcast) {\n          // If VP9 is the only available video codec then use SVC.\n          const firstVideoCodec = this._mediasoupDevice\n            .rtpCapabilities\n            .codecs\n            .find((c) => c.kind === 'video');\n\n          let encodings;\n\n          if (firstVideoCodec.mimeType.toLowerCase() === 'video/vp9')\n            encodings = VIDEO_KSVC_ENCODINGS;\n          else if (simulcastEncodings)\n            encodings = simulcastEncodings;\n          else\n            encodings = VIDEO_SIMULCAST_ENCODINGS;\n\n          this._webcamProducer = await this._sendTransport.produce(\n            {\n              track,\n              encodings,\n              codecOptions:\n              {\n                videoGoogleStartBitrate: 1000\n              },\n              appData:\n              {\n                source: 'webcam'\n              }\n            });\n        }\n        else {\n          this._webcamProducer = await this._sendTransport.produce({\n            track,\n            appData:\n            {\n              source: 'webcam'\n            }\n          });\n        }\n\n        // store.dispatch(producerActions.addProducer(\n        //   {\n        //     id: this._webcamProducer.id,\n        //     source: 'webcam',\n        //     paused: this._webcamProducer.paused,\n        //     track: this._webcamProducer.track,\n        //     rtpParameters: this._webcamProducer.rtpParameters,\n        //     codec: this._webcamProducer.rtpParameters.codecs[0].mimeType.split('/')[1]\n        //   }));\n\n\n        const webCamStream = new Stream()\n        webCamStream.setProducer(this._webcamProducer);\n\n        this.onCamProducing.next(webCamStream)\n\n        this._webcamProducer.on('transportclose', () => {\n          this._webcamProducer = null;\n        });\n\n        this._webcamProducer.on('trackended', () => {\n          // store.dispatch(requestActions.notify(\n          //   {\n          //     type: 'error',\n          //     text: intl.formatMessage({\n          //       id: 'devices.cameraDisconnected',\n          //       defaultMessage: 'Camera disconnected'\n          //     })\n          //   }));\n\n          this.disableWebcam();\n        });\n      }\n      else if (this._webcamProducer) {\n        ({ track } = this._webcamProducer);\n\n        await track.applyConstraints(\n          {\n            ...VIDEO_CONSTRAINS[resolution],\n            frameRate\n          }\n        );\n\n        // Also change resolution of extra video producers\n        for (const producer of this._extraVideoProducers.values()) {\n          ({ track } = producer);\n\n          await track.applyConstraints(\n            {\n              ...VIDEO_CONSTRAINS[resolution],\n              frameRate\n            }\n          );\n        }\n      }\n\n      await this._updateWebcams();\n    }\n    catch (error) {\n      this.logger.error('updateWebcam() [error:\"%o\"]', error);\n\n      // store.dispatch(requestActions.notify(\n      //   {\n      //     type: 'error',\n      //     text: intl.formatMessage({\n      //       id: 'devices.cameraError',\n      //       defaultMessage: 'An error occurred while accessing your camera'\n      //     })\n      //   }));\n\n      if (track)\n        track.stop();\n    }\n\n    // store.dispatch(\n    //   meActions.setWebcamInProgress(false));\n  }\n\n  async closeMeeting() {\n    this.logger.debug('closeMeeting()');\n\n    // store.dispatch(\n    //   roomActions.setCloseMeetingInProgress(true));\n\n    try {\n      await this.signalingService.sendRequest('moderator:closeMeeting');\n    }\n    catch (error) {\n      this.logger.error('closeMeeting() [error:\"%o\"]', error);\n    }\n\n    // store.dispatch(\n    //   roomActions.setCloseMeetingInProgress(false));\n  }\n\n  // // type: mic/webcam/screen\n  // // mute: true/false\n  async modifyPeerConsumer(peerId, type, mute) {\n    this.logger.debug(\n      'modifyPeerConsumer() [peerId:\"%s\", type:\"%s\"]',\n      peerId,\n      type\n    );\n\n    // if (type === 'mic')\n    //   store.dispatch(\n    //     peerActions.setPeerAudioInProgress(peerId, true));\n    // else if (type === 'webcam')\n    //   store.dispatch(\n    //     peerActions.setPeerVideoInProgress(peerId, true));\n    // else if (type === 'screen')\n    //   store.dispatch(\n    //     peerActions.setPeerScreenInProgress(peerId, true));\n\n    try {\n      for (const consumer of this._consumers.values()) {\n        if (consumer.appData.peerId === peerId && consumer.appData.source === type) {\n          if (mute)\n            await this._pauseConsumer(consumer);\n          else\n            await this._resumeConsumer(consumer);\n        }\n      }\n    }\n    catch (error) {\n      this.logger.error('modifyPeerConsumer() [error:\"%o\"]', error);\n    }\n\n    // if (type === 'mic')\n    //   store.dispatch(\n    //     peerActions.setPeerAudioInProgress(peerId, false));\n    // else if (type === 'webcam')\n    //   store.dispatch(\n    //     peerActions.setPeerVideoInProgress(peerId, false));\n    // else if (type === 'screen')\n    //   store.dispatch(\n    //     peerActions.setPeerScreenInProgress(peerId, false));\n  }\n\n  async _pauseConsumer(consumer) {\n    this.logger.debug('_pauseConsumer() [consumer:\"%o\"]', consumer);\n\n    if (consumer.paused || consumer.closed)\n      return;\n\n    try {\n      await this.signalingService.sendRequest('pauseConsumer', { consumerId: consumer.id });\n\n      consumer.pause();\n\n      // store.dispatch(\n      //   consumerActions.setConsumerPaused(consumer.id, 'local'));\n    }\n    catch (error) {\n      this.logger.error('_pauseConsumer() [error:\"%o\"]', error);\n    }\n  }\n\n  async _resumeConsumer(consumer) {\n    this.logger.debug('_resumeConsumer() [consumer:\"%o\"]', consumer);\n\n    if (!consumer.paused || consumer.closed)\n      return;\n\n    try {\n      await this.signalingService.sendRequest('resumeConsumer', { consumerId: consumer.id });\n\n      consumer.resume();\n\n      // store.dispatch(\n      //   consumerActions.setConsumerResumed(consumer.id, 'local'));\n    }\n    catch (error) {\n      this.logger.error('_resumeConsumer() [error:\"%o\"]', error);\n    }\n  }\n\n  // async setMaxSendingSpatialLayer(spatialLayer) {\n  //   logger.debug('setMaxSendingSpatialLayer() [spatialLayer:\"%s\"]', spatialLayer);\n\n  //   try {\n  //     if (this._webcamProducer)\n  //       await this._webcamProducer.setMaxSpatialLayer(spatialLayer);\n  //     if (this._screenSharingProducer)\n  //       await this._screenSharingProducer.setMaxSpatialLayer(spatialLayer);\n  //   }\n  //   catch (error) {\n  //     logger.error('setMaxSendingSpatialLayer() [error:\"%o\"]', error);\n  //   }\n  // }\n\n  // async setConsumerPreferredLayers(consumerId, spatialLayer, temporalLayer) {\n  //   logger.debug(\n  //     'setConsumerPreferredLayers() [consumerId:\"%s\", spatialLayer:\"%s\", temporalLayer:\"%s\"]',\n  //     consumerId, spatialLayer, temporalLayer);\n\n  //   try {\n  //     await this.sendRequest(\n  //       'setConsumerPreferedLayers', { consumerId, spatialLayer, temporalLayer });\n\n  //     store.dispatch(consumerActions.setConsumerPreferredLayers(\n  //       consumerId, spatialLayer, temporalLayer));\n  //   }\n  //   catch (error) {\n  //     logger.error('setConsumerPreferredLayers() [error:\"%o\"]', error);\n  //   }\n  // }\n\n  // async setConsumerPriority(consumerId, priority) {\n  //   logger.debug(\n  //     'setConsumerPriority() [consumerId:\"%s\", priority:%d]',\n  //     consumerId, priority);\n\n  //   try {\n  //     await this.sendRequest('setConsumerPriority', { consumerId, priority });\n\n  //     store.dispatch(consumerActions.setConsumerPriority(consumerId, priority));\n  //   }\n  //   catch (error) {\n  //     logger.error('setConsumerPriority() [error:\"%o\"]', error);\n  //   }\n  // }\n\n  // async requestConsumerKeyFrame(consumerId) {\n  //   logger.debug('requestConsumerKeyFrame() [consumerId:\"%s\"]', consumerId);\n\n  //   try {\n  //     await this.sendRequest('requestConsumerKeyFrame', { consumerId });\n  //   }\n  //   catch (error) {\n  //     logger.error('requestConsumerKeyFrame() [error:\"%o\"]', error);\n  //   }\n  // }\n\n\n\n\n  async join({ roomId, joinVideo, joinAudio }) {\n\n\n    this._roomId = roomId;\n\n\n    // initialize signaling socket\n    // listen to socket events\n    this.signalingService.init(roomId, this._peerId)\n    this.signalingService.onDisconnected.subscribe( () => {\n      // close\n      // this.close\n    })\n    this.signalingService.onReconnecting.subscribe( () => {\n      // close\n\n\n\n\n\t\t\tif (this._webcamProducer)\n\t\t\t{\n\t\t\t\tthis._webcamProducer.close();\n\n\t\t\t\t// store.dispatch(\n\t\t\t\t// \tproducerActions.removeProducer(this._webcamProducer.id));\n\n\t\t\t\tthis._webcamProducer = null;\n\t\t\t}\n\n\t\t\tif (this._micProducer)\n\t\t\t{\n\t\t\t\tthis._micProducer.close();\n\n\t\t\t\t// store.dispatch(\n\t\t\t\t// \tproducerActions.removeProducer(this._micProducer.id));\n\n\t\t\t\tthis._micProducer = null;\n\t\t\t}\n\n\t\t\tif (this._sendTransport)\n\t\t\t{\n\t\t\t\tthis._sendTransport.close();\n\n\t\t\t\tthis._sendTransport = null;\n\t\t\t}\n\n\t\t\tif (this._recvTransport)\n\t\t\t{\n\t\t\t\tthis._recvTransport.close();\n\n\t\t\t\tthis._recvTransport = null;\n\t\t\t}\n\n      this.remotePeersService.clearPeers();\n\n\n\t\t\t// store.dispatch(roomActions.setRoomState('connecting'));\n    })\n\n    this.signalingService.onNewConsumer.pipe(switchMap(async (data) => {\n      const {\n        peerId,\n        producerId,\n        id,\n        kind,\n        rtpParameters,\n        type,\n        appData,\n        producerPaused\n      } = data;\n\n      const consumer  = await this._recvTransport.consume(\n        {\n          id,\n          producerId,\n          kind,\n          rtpParameters,\n          appData : { ...appData, peerId } // Trick.\n        }) as mediasoupClient.types.Consumer;\n\n      // Store in the map.\n      this._consumers.set(consumer.id, consumer);\n\n      consumer.on('transportclose', () =>\n      {\n        this._consumers.delete(consumer.id);\n      });\n\n\n\n\n      this.remotePeersService.newConsumer(consumer,  peerId, type, producerPaused);\n\n      // We are ready. Answer the request so the server will\n      // resume this Consumer (which was paused for now).\n\n\n      // if (kind === 'audio')\n      // {\n      //   consumer.volume = 0;\n\n      //   const stream = new MediaStream();\n\n      //   stream.addTrack(consumer.track);\n\n      //   if (!stream.getAudioTracks()[0])\n      //     throw new Error('request.newConsumer | given stream has no audio track');\n\n        // consumer.hark = hark(stream, { play: false });\n\n        // consumer.hark.on('volume_change', (volume) =>\n        // {\n        //   volume = Math.round(volume);\n\n        //   if (consumer && volume !== consumer.volume)\n        //   {\n        //     consumer.volume = volume;\n\n        //     // store.dispatch(peerVolumeActions.setPeerVolume(peerId, volume));\n        //   }\n        // });\n      // }\n\n    })).subscribe()\n\n    this.signalingService.onNotification.pipe(switchMap(async (notification) => {\n      this.logger.debug(\n        'socket \"notification\" event [method:\"%s\", data:\"%o\"]',\n        notification.method, notification.data);\n\n      try {\n        switch (notification.method) {\n\n\n\n          case 'producerScore':\n            {\n              const { producerId, score } = notification.data;\n\n              // store.dispatch(\n              //   producerActions.setProducerScore(producerId, score));\n\n              break;\n            }\n\n          case 'newPeer':\n            {\n              const { id, displayName, picture, roles } = notification.data;\n\n              // store.dispatch(peerActions.addPeer(\n              //   { id, displayName, picture, roles, consumers: [] }));\n\n              this.remotePeersService.newPeer(id);\n\n              // this._soundNotification();\n\n              // store.dispatch(requestActions.notify(\n              //   {\n              //     text: intl.formatMessage({\n              //       id: 'room.newPeer',\n              //       defaultMessage: '{displayName} joined the room'\n              //     }, {\n              //       displayName\n              //     })\n              //   }));\n\n              break;\n            }\n\n          case 'peerClosed':\n            {\n              const { peerId } = notification.data;\n\n              this.remotePeersService.closePeer(peerId);\n\n              // store.dispatch(\n              //   peerActions.removePeer(peerId));\n\n              break;\n            }\n\n          case 'consumerClosed':\n            {\n              const { consumerId } = notification.data;\n              const consumer = this._consumers.get(consumerId);\n\n              if (!consumer)\n                break;\n\n              consumer.close();\n\n              if (consumer.hark != null)\n                consumer.hark.stop();\n\n              this._consumers.delete(consumerId);\n\n              const { peerId } = consumer.appData;\n\n              // store.dispatch(\n              //   consumerActions.removeConsumer(consumerId, peerId));\n\n              break;\n            }\n\n          case 'consumerPaused':\n            {\n              const { consumerId } = notification.data;\n              const consumer = this._consumers.get(consumerId);\n\n              if (!consumer)\n                break;\n\n              // store.dispatch(\n              //   consumerActions.setConsumerPaused(consumerId, 'remote'));\n\n              break;\n            }\n\n          case 'consumerResumed':\n            {\n              const { consumerId } = notification.data;\n              const consumer = this._consumers.get(consumerId);\n\n              if (!consumer)\n                break;\n\n              // store.dispatch(\n              //   consumerActions.setConsumerResumed(consumerId, 'remote'));\n\n              break;\n            }\n\n          case 'consumerLayersChanged':\n            {\n              const { consumerId, spatialLayer, temporalLayer } = notification.data;\n              const consumer = this._consumers.get(consumerId);\n\n              if (!consumer)\n                break;\n\n              this.remotePeersService.onConsumerLayerChanged(consumerId)\n              // store.dispatch(consumerActions.setConsumerCurrentLayers(\n              //   consumerId, spatialLayer, temporalLayer));\n\n              break;\n            }\n\n          case 'consumerScore':\n            {\n              const { consumerId, score } = notification.data;\n\n              // store.dispatch(\n              //   consumerActions.setConsumerScore(consumerId, score));\n\n              break;\n            }\n            case 'roomBack':\n              {\n                await this._joinRoom({ joinVideo, joinAudio });\n\n                break;\n              }\n\n              case 'roomReady':\n                {\n                  const { turnServers } = notification.data;\n\n                  this._turnServers = turnServers;\n\n                  // store.dispatch(roomActions.toggleJoined());\n                  // store.dispatch(roomActions.setInLobby(false));\n\n                  await this._joinRoom({ joinVideo, joinAudio });\n\n                  break;\n                }\n          default:\n            {\n              // this.logger.error(\n              //   'unknown notification.method \"%s\"', notification.method);\n            }\n        }\n      }\n      catch (error) {\n        this.logger.error('error on socket \"notification\" event [error:\"%o\"]', error);\n\n        // store.dispatch(requestActions.notify(\n        //   {\n        //     type: 'error',\n        //     text: intl.formatMessage({\n        //       id: 'socket.requestError',\n        //       defaultMessage: 'Error on server request'\n        //     })\n        //   }));\n      }\n\n    })).subscribe()\n    // on room ready join room _joinRoom\n\n    // this._mediasoupDevice = new mediasoupClient.Device();\n\n    // const routerRtpCapabilities =\n    //   await this.sendRequest('getRouterRtpCapabilities');\n\n    // routerRtpCapabilities.headerExtensions = routerRtpCapabilities.headerExtensions\n    //   .filter((ext) => ext.uri !== 'urn:3gpp:video-orientation');\n\n    // await this._mediasoupDevice.load({ routerRtpCapabilities });\n\n    // create send transport createWebRtcTransport this.signalingService.sendCreateTransport\n    // listen to transport events\n\n    // create receive transport this.signalingService.sendCreateTranspor\n    // listen to transport events\n\n    // send join request\n\n    // add peers to peers service\n\n    // produce updateWebcam updateMic\n  }\n\n\n\tasync _updateAudioDevices()\n\t{\n\t\tthis.logger.debug('_updateAudioDevices()');\n\n\t\t// Reset the list.\n\t\tthis._audioDevices = {};\n\n\t\ttry\n\t\t{\n\t\t\tthis.logger.debug('_updateAudioDevices() | calling enumerateDevices()');\n\n\t\t\tconst devices = await navigator.mediaDevices.enumerateDevices();\n\n\t\t\tfor (const device of devices)\n\t\t\t{\n\t\t\t\tif (device.kind !== 'audioinput')\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._audioDevices[device.deviceId] = device;\n\t\t\t}\n\n\t\t\t// store.dispatch(\n\t\t\t// \tmeActions.setAudioDevices(this._audioDevices));\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.logger.error('_updateAudioDevices() [error:\"%o\"]', error);\n\t\t}\n\t}\n\n\tasync _updateWebcams()\n\t{\n\t\tthis.logger.debug('_updateWebcams()');\n\n\t\t// Reset the list.\n\t\tthis._webcams = {};\n\n\t\ttry\n\t\t{\n\t\t\tthis.logger.debug('_updateWebcams() | calling enumerateDevices()');\n\n\t\t\tconst devices = await navigator.mediaDevices.enumerateDevices();\n\n\t\t\tfor (const device of devices)\n\t\t\t{\n\t\t\t\tif (device.kind !== 'videoinput')\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._webcams[device.deviceId] = device;\n\t\t\t}\n\n\t\t\t// store.dispatch(\n\t\t\t// \tmeActions.setWebcamDevices(this._webcams));\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.logger.error('_updateWebcams() [error:\"%o\"]', error);\n\t\t}\n\t}\n\n\tasync disableWebcam()\n\t{\n\t\tthis.logger.debug('disableWebcam()');\n\n\t\tif (!this._webcamProducer)\n\t\t\treturn;\n\n\t\t// store.dispatch(meActions.setWebcamInProgress(true));\n\n\t\tthis._webcamProducer.close();\n\n\t\t// store.dispatch(\n\t\t// \tproducerActions.removeProducer(this._webcamProducer.id));\n\n\t\ttry\n\t\t{\n\t\t\tawait this.signalingService.sendRequest(\n\t\t\t\t'closeProducer', { producerId: this._webcamProducer.id });\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.logger.error('disableWebcam() [error:\"%o\"]', error);\n\t\t}\n\n\t\tthis._webcamProducer = null;\n\t\t// store.dispatch(settingsActions.setVideoMuted(true));\n\t\t// store.dispatch(meActions.setWebcamInProgress(false));\n\t}\n\tasync disableMic()\n\t{\n\t\tthis.logger.debug('disableMic()');\n\n\t\tif (!this._micProducer)\n\t\t\treturn;\n\n\t\t// store.dispatch(meActions.setAudioInProgress(true));\n\n\t\tthis._micProducer.close();\n\n\t\t// store.dispatch(\n\t\t// \tproducerActions.removeProducer(this._micProducer.id));\n\n\t\ttry\n\t\t{\n\t\t\tawait this.signalingService.sendRequest(\n\t\t\t\t'closeProducer', { producerId: this._micProducer.id });\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.logger.error('disableMic() [error:\"%o\"]', error);\n\t\t}\n\n\t\tthis._micProducer = null;\n\n\t\t// store.dispatch(meActions.setAudioInProgress(false));\n  }\n\n\n\tasync _getWebcamDeviceId()\n\t{\n\t\tthis.logger.debug('_getWebcamDeviceId()');\n\n\t\ttry\n\t\t{\n\t\t\tthis.logger.debug('_getWebcamDeviceId() | calling _updateWebcams()');\n\n\t\t\tawait this._updateWebcams();\n\n\t\t\tconst  selectedWebcam =  null\n\n\t\t\tif (selectedWebcam && this._webcams[selectedWebcam])\n\t\t\t\treturn selectedWebcam;\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst webcams = Object.values(this._webcams);\n\n        // @ts-ignore\n\t\t\t\treturn webcams[0] ? webcams[0].deviceId : null;\n\t\t\t}\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.logger.error('_getWebcamDeviceId() [error:\"%o\"]', error);\n\t\t}\n  }\n\n\n\tasync _getAudioDeviceId()\n\t{\n\t\tthis.logger.debug('_getAudioDeviceId()');\n\n\t\ttry\n\t\t{\n\t\t\tthis.logger.debug('_getAudioDeviceId() | calling _updateAudioDeviceId()');\n\n\t\t\tawait this._updateAudioDevices();\n\n      const  selectedAudioDevice = null;\n\n\t\t\tif (selectedAudioDevice && this._audioDevices[selectedAudioDevice])\n\t\t\t\treturn selectedAudioDevice;\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst audioDevices = Object.values(this._audioDevices);\n\n        // @ts-ignore\n\t\t\t\treturn audioDevices[0] ? audioDevices[0].deviceId : null;\n\t\t\t}\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.logger.error('_getAudioDeviceId() [error:\"%o\"]', error);\n\t\t}\n\t}\n\n\tasync _updateAudioOutputDevices()\n\t{\n\t\tthis.logger.debug('_updateAudioOutputDevices()');\n\n\t\t// Reset the list.\n\t\tthis._audioOutputDevices = {};\n\n\t\ttry\n\t\t{\n\t\t\tthis.logger.debug('_updateAudioOutputDevices() | calling enumerateDevices()');\n\n\t\t\tconst devices = await navigator.mediaDevices.enumerateDevices();\n\n\t\t\tfor (const device of devices)\n\t\t\t{\n\t\t\t\tif (device.kind !== 'audiooutput')\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._audioOutputDevices[device.deviceId] = device;\n\t\t\t}\n\n\t\t\t// store.dispatch(\n\t\t\t// \tmeActions.setAudioOutputDevices(this._audioOutputDevices));\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.logger.error('_updateAudioOutputDevices() [error:\"%o\"]', error);\n\t\t}\n\t}\n\n\n\n  async _joinRoom({ joinVideo, joinAudio }) {\n    this.logger.debug('_joinRoom()');\n\n    const displayName = `Guest ${Math.floor(Math.random() * (100000 - 10000)) + 10000}`\n\n\n    try {\n\n\n      this._mediasoupDevice = new mediasoupClient.Device();\n\n      const routerRtpCapabilities =\n        await this.signalingService.sendRequest('getRouterRtpCapabilities');\n\n      routerRtpCapabilities.headerExtensions = routerRtpCapabilities.headerExtensions\n        .filter((ext) => ext.uri !== 'urn:3gpp:video-orientation');\n\n      await this._mediasoupDevice.load({ routerRtpCapabilities });\n\n      if (this._produce) {\n        const transportInfo = await this.signalingService.sendRequest(\n          'createWebRtcTransport',\n          {\n            forceTcp: this._forceTcp,\n            producing: true,\n            consuming: false\n          });\n\n        const {\n          id,\n          iceParameters,\n          iceCandidates,\n          dtlsParameters\n        } = transportInfo;\n\n        this._sendTransport = this._mediasoupDevice.createSendTransport(\n          {\n            id,\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            iceServers: this._turnServers,\n            // TODO: Fix for issue #72\n            iceTransportPolicy: this._device.flag === 'firefox' && this._turnServers ? 'relay' : undefined,\n            proprietaryConstraints: PC_PROPRIETARY_CONSTRAINTS\n          });\n\n        this._sendTransport.on(\n          'connect', ({ dtlsParameters }, callback, errback) => // eslint-disable-line no-shadow\n        {\n          this.signalingService.sendRequest(\n            'connectWebRtcTransport',\n            {\n              transportId: this._sendTransport.id,\n              dtlsParameters\n            })\n            .then(callback)\n            .catch(errback);\n        });\n\n        this._sendTransport.on(\n          'produce', async ({ kind, rtpParameters, appData }, callback, errback) => {\n          try {\n            // eslint-disable-next-line no-shadow\n            const { id } = await this.signalingService.sendRequest(\n              'produce',\n              {\n                transportId: this._sendTransport.id,\n                kind,\n                rtpParameters,\n                appData\n              });\n\n            callback({ id });\n          }\n          catch (error) {\n            errback(error);\n          }\n        });\n      }\n\n      const transportInfo = await this.signalingService.sendRequest(\n        'createWebRtcTransport',\n        {\n          forceTcp: this._forceTcp,\n          producing: false,\n          consuming: true\n        });\n\n      const {\n        id,\n        iceParameters,\n        iceCandidates,\n        dtlsParameters\n      } = transportInfo;\n\n      this._recvTransport = this._mediasoupDevice.createRecvTransport(\n        {\n          id,\n          iceParameters,\n          iceCandidates,\n          dtlsParameters,\n          iceServers: this._turnServers,\n          // TODO: Fix for issue #72\n          iceTransportPolicy: this._device.flag === 'firefox' && this._turnServers ? 'relay' : undefined\n        });\n\n      this._recvTransport.on(\n        'connect', ({ dtlsParameters }, callback, errback) => // eslint-disable-line no-shadow\n      {\n        this.signalingService.sendRequest(\n          'connectWebRtcTransport',\n          {\n            transportId: this._recvTransport.id,\n            dtlsParameters\n          })\n          .then(callback)\n          .catch(errback);\n      });\n\n      // Set our media capabilities.\n      // store.dispatch(meActions.setMediaCapabilities(\n      // \t{\n      // \t\tcanSendMic     : this._mediasoupDevice.canProduce('audio'),\n      // \t\tcanSendWebcam  : this._mediasoupDevice.canProduce('video'),\n      // \t\tcanShareScreen : this._mediasoupDevice.canProduce('video') &&\n      // \t\t\tthis._screenSharing.isScreenShareAvailable(),\n      // \t\tcanShareFiles : this._torrentSupport\n      // \t}));\n\n      const {\n        authenticated,\n        roles,\n        peers,\n        tracker,\n        roomPermissions,\n        userRoles,\n        allowWhenRoleMissing,\n        chatHistory,\n        fileHistory,\n        lastNHistory,\n        locked,\n        lobbyPeers,\n        accessCode\n      } = await this.signalingService.sendRequest(\n        'join',\n        {\n          displayName: displayName,\n\n          rtpCapabilities: this._mediasoupDevice.rtpCapabilities\n        });\n\n      this.logger.debug(\n        '_joinRoom() joined [authenticated:\"%s\", peers:\"%o\", roles:\"%o\", userRoles:\"%o\"]',\n        authenticated,\n        peers,\n        roles,\n        userRoles\n      );\n\n\n\n\n\n      // for (const peer of peers)\n      // {\n      // \tstore.dispatch(\n      // \t\tpeerActions.addPeer({ ...peer, consumers: [] }));\n      // }\n\n        this.logger.debug('join audio',joinAudio , 'can produce audio',\n          this._mediasoupDevice.canProduce('audio'), ' this._muted', this._muted)\n      // Don't produce if explicitly requested to not to do it.\n      if (this._produce) {\n        if (\n          joinVideo\n        ) {\n          this.updateWebcam({ init: true, start: true });\n        }\n        if (\n          joinAudio &&\n          this._mediasoupDevice.canProduce('audio')\n        )\n          if (!this._muted) {\n            await this.updateMic({ start: true });\n\n          }\n      }\n\n      await this._updateAudioOutputDevices();\n\n      // const  selectedAudioOutputDevice  = null\n\n      // if (!selectedAudioOutputDevice && this._audioOutputDevices !== {})\n      // {\n      // \tstore.dispatch(\n      // \t\tsettingsActions.setSelectedAudioOutputDevice(\n      // \t\t\tObject.keys(this._audioOutputDevices)[0]\n      // \t\t)\n      // \t);\n      // }\n\n      // store.dispatch(roomActions.setRoomState('connected'));\n\n      // // Clean all the existing notifications.\n      // store.dispatch(notificationActions.removeAllNotifications());\n\n      // store.dispatch(requestActions.notify(\n      // \t{\n      // \t\ttext : intl.formatMessage({\n      // \t\t\tid             : 'room.joined',\n      // \t\t\tdefaultMessage : 'You have joined the room'\n      // \t\t})\n      // \t}));\n\n      this.remotePeersService.addPeers(peers);\n\n\n    }\n    catch (error) {\n      this.logger.error('_joinRoom() [error:\"%o\"]', error);\n\n\n      this.close();\n    }\n  }\n  deviceInfo() {\n    const ua = navigator.userAgent;\n    const browser = bowser.getParser(ua);\n\n    let flag;\n\n    if (browser.satisfies({ chrome: '>=0', chromium: '>=0' }))\n      flag = 'chrome';\n    else if (browser.satisfies({ firefox: '>=0' }))\n      flag = 'firefox';\n    else if (browser.satisfies({ safari: '>=0' }))\n      flag = 'safari';\n    else if (browser.satisfies({ opera: '>=0' }))\n      flag = 'opera';\n    else if (browser.satisfies({ 'microsoft edge': '>=0' }))\n      flag = 'edge';\n    else\n      flag = 'unknown';\n\n    return {\n      flag,\n      os: browser.getOSName(true), // ios, android, linux...\n      platform: browser.getPlatformType(true), // mobile, desktop, tablet\n      name: browser.getBrowserName(true),\n      version: browser.getBrowserVersion(),\n      bowser: browser\n    };\n\n  }\n}\n"]}